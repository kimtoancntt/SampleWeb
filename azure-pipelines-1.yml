
trigger:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - README.md
      - docs/*

# Pull request trigger
pr:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md

# Variables
variables:
  # Variable Groups (setup trong Library)
  - group: github-credentials  # GITHUB_PAT, GITHUB_USERNAME
  - group: acr-credentials     # ACR_NAME, ACR_LOGIN_SERVER
  
  # Pipeline variables
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: buildConfiguration
    value: 'Release'
  - name: tag
    value: '$(Build.BuildId)'
  
  # Dynamic variables based on branch
  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    - name: environment
      value: 'production'
    - name: imageRepository
      value: 'myapp'
  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    - name: environment
      value: 'development'
    - name: imageRepository
      value: 'myapp-dev'

# Agent pool
pool:
  vmImage: 'ubuntu-latest'

# Stages
stages:
# =====================================
# STAGE 1: CHECKOUT & VALIDATE
# =====================================
- stage: Checkout
  displayName: 'Checkout and Validate'
  jobs:
  - job: CheckoutCode
    displayName: 'Checkout from GitHub'
    steps:
    # Method 1: Checkout current repo (nếu pipeline đã link với GitHub)
    - checkout: self
      displayName: 'Checkout Main Repository'
      clean: true
      fetchDepth: 1
      persistCredentials: true

    # Display environment info
    - script: |
        echo "=== Build Information ==="
        echo "Build ID: $(Build.BuildId)"
        echo "Build Number: $(Build.BuildNumber)"
        echo "Source Branch: $(Build.SourceBranch)"
        echo "Source Version: $(Build.SourceVersion)"
        echo "Repository: $(Build.Repository.Name)"
        echo "Environment: $(environment)"
        echo "Image: $(imageRepository):$(tag)"
        echo ""
        echo "=== Agent Information ==="
        echo "Agent Name: $(Agent.Name)"
        echo "Agent OS: $(Agent.OS)"
        echo "Agent Version: $(Agent.Version)"
        echo ""
        echo "=== Docker Information ==="
        docker --version
        docker info
      displayName: 'Display Environment Info'