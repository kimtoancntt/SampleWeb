# =============================================
# Azure DevOps Pipeline - Build & Deploy to AKS
# =============================================

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - Dockerfile
      - index.html
      - k8s/*

# =============================================
# VARIABLES
# =============================================
variables:
  - group: github-credentials      # GITHUB_PAT, GITHUB_USERNAME
  - group: acr-credentials         # ACR_NAME, ACR_LOGIN_SERVER, ACR_PASSWORD, ACR_USERNAME
  - group: aks-config              # AZURE_RG, AKS_CLUSTER, KUBE_NAMESPACE
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: imageRepository
    value: 'nginx-website'
  - name: tag
    value: '$(Build.BuildId)'
  - name: acrServiceConnection
    value: 'acr-connection'         # üîπ Service connection type: Docker Registry (ACR)
  - name: azureRMConnection
    value: 'azure-rm-connection'    # üîπ Service connection type: Azure Resource Manager
  - name: kubernetesConnection
    value: 'aks-connection'         # üîπ Service connection type: Kubernetes

pool:
  vmImage: 'ubuntu-latest'

# =============================================
# STAGE 1 - BUILD & PUSH IMAGE
# =============================================
stages:
- stage: BuildAndPush
  displayName: "Build & Push Docker Image"
  jobs:
  - job: BuildDocker
    displayName: "Build Docker Image"
    steps:
    - checkout: self
      clean: true

    - script: |
        echo "‚úÖ Starting build for $(imageRepository):$(tag)"
        echo "ACR Server: $(ACR_LOGIN_SERVER)"
        echo "Dockerfile path: $(dockerfilePath)"
      displayName: "Display Build Info"

    # üîπ Login to Azure Container Registry
    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        command: login
        containerRegistry: $(acrServiceConnection)

    # üîπ Build Docker image
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        tags: |
          $(tag)
          latest

    # üîπ Push Docker image to ACR
    - task: Docker@2
      displayName: 'Push to ACR'
      inputs:
        command: push
        repository: $(imageRepository)
        tags: |
          $(tag)
          latest

    - script: |
        echo "‚úÖ Image successfully pushed to ACR"
        echo "Full path: $(ACR_LOGIN_SERVER)/$(imageRepository):$(tag)"
      displayName: "Build Summary"

# =============================================
# STAGE 2 - DEPLOY TO AKS
# =============================================
- stage: Deploy
  displayName: "Deploy to AKS"
  dependsOn: BuildAndPush
  condition: succeeded()

  jobs:
  - job: DeployK8s
    displayName: "Deploy App to AKS"
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    # ===============================================
    # üîπ 1. Get AKS credentials dynamically (login Azure + get kubeconfig)
    # ===============================================
    - task: AzureCLI@2
      displayName: 'Get AKS Credentials'
      inputs:
        azureSubscription: $(azureRMConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Fetching AKS credentials for cluster $(AKS_CLUSTER) in RG $(AZURE_RG)..."
          az aks get-credentials --resource-group $(AZURE_RG) --name $(AKS_CLUSTER) --overwrite-existing
          echo "‚úÖ Connected to AKS cluster"
          kubectl get nodes

    # ===============================================
    # üîπ 2. Check Image Info
    # ===============================================
    - script: |
        echo "=========================================="
        echo "üîç Image to deploy:"
        echo "$(ACR_LOGIN_SERVER)/$(imageRepository):$(tag)"
        echo "=========================================="
      displayName: 'Check Image Value'

    # ===============================================
    # üîπ 3. Show manifest content
    # ===============================================
    - script: |
        echo "üìÑ Deployment manifest content:"
        cat $(Build.SourcesDirectory)/k8s/deployment.yaml || echo "‚ö†Ô∏è deployment.yaml not found"
        echo ""
        echo "üìÑ Service manifest content:"
        cat $(Build.SourcesDirectory)/k8s/service.yaml || echo "‚ö†Ô∏è service.yaml not found"
      displayName: 'Show Manifest File'

    # ===============================================
    # üîπ 4. Deploy manifests to AKS
    # ===============================================
    - task: KubernetesManifest@1
      displayName: 'Deploy to AKS'
      inputs:
        action: 'deploy'
        connectionType: 'kubernetes'
        kubernetesServiceConnection: $(kubernetesConnection)
        namespace: $(KUBE_NAMESPACE)
        manifests: |
          $(Build.SourcesDirectory)/k8s/deployment.yaml
          $(Build.SourcesDirectory)/k8s/service.yaml
        containers: |
          $(ACR_LOGIN_SERVER)/$(imageRepository):$(tag)

    # ===============================================
    # üîπ 5. Verify deployment
    # ===============================================
    - script: |
        echo "Verifying deployment..."
        kubectl get pods -n $(KUBE_NAMESPACE)
        kubectl get svc -n $(KUBE_NAMESPACE)
        echo ""
        echo "‚úÖ Deployment verification complete!"
      displayName: 'Verify Deployment'
